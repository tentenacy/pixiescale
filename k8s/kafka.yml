apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: pixiescale
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: zookeeper
          image: confluentinc/cp-zookeeper:7.5.0
          ports:
            - containerPort: 2181
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
            - name: ZOOKEEPER_TICK_TIME
              value: "2000"
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "500m"
        - name: kafka
          image: confluentinc/cp-kafka:7.5.0
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "localhost:2181"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka-service:9092"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
          resources:
            requests:
              memory: "258Mi"
              cpu: "200m"
            limits:
              memory: "512Mi"
              cpu: "1000m"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: pixiescale
spec:
  selector:
    app: kafka
  ports:
    - port: 9092
      targetPort: 9092
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kafka-topic-setup
  namespace: pixiescale
spec:
  template:
    spec:
      containers:
        - name: kafka-topic-setup
          image: confluentinc/cp-kafka:7.5.0
          command:
            - "sh"
            - "-c"
            - |
              # Kafka가 준비될 때까지 대기
              echo "Kafka가 준비될 때까지 대기 중..."
              until kafka-topics --bootstrap-server kafka-service:9092 --list > /dev/null 2>&1; do
                sleep 5
              done
              
              echo "Kafka가 준비되었습니다."
              
              # transcoding-task 토픽 설정
              if kafka-topics --bootstrap-server kafka-service:9092 --list | grep -q "transcoding-task"; then
                echo "transcoding-task 토픽이 존재합니다. 파티션 수를 10으로 변경합니다..."
                kafka-topics --bootstrap-server kafka-service:9092 --alter --topic transcoding-task --partitions 10
              else
                echo "transcoding-task 토픽을 10개 파티션으로 생성합니다..."
                kafka-topics --bootstrap-server kafka-service:9092 --create --topic transcoding-task --partitions 10 --replication-factor 1
              fi
              
              echo "Kafka 토픽 설정이 완료되었습니다."
      restartPolicy: OnFailure