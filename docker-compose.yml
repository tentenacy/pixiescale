services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  common:
    build:
      context: ./pixiescale-common
    volumes:
      - maven-repo:/root/.m2/repository

  mediaingestion:
    build:
      context: ./pixiescale-mediaingestion
      dockerfile: Dockerfile
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    volumes:
      - media-uploads:/app/media/uploads
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_OPTS=-Xms256m -Xmx512m

  jobmanagement:
    build:
      context: ./pixiescale-jobmanagement
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - redis
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_OPTS=-Xms256m -Xmx512m

  transcodingworker:
    build:
      context: ./pixiescale-transcodingworker
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - mediaingestion
    ports:
      - "8083:8083"
    volumes:
      - media-uploads:/app/media/uploads
      - media-output:/app/media/output
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_OPTS=-Xms256m -Xmx512m
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [compute, video, utility]

  mediastorage:
    build:
      context: ./pixiescale-mediastorage
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - transcodingworker
    ports:
      - "8084:8084"
    volumes:
      - media-output:/app/media/output:ro
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_OPTS=-Xms256m -Xmx512m

  apigateway:
    build:
      context: ./pixiescale-apigateway
      dockerfile: Dockerfile
    depends_on:
      - mediaingestion
      - jobmanagement
      - transcodingworker
      - mediastorage
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_OPTS=-Xms256m -Xmx512m

  prometheus:
    image: prom/prometheus:v2.37.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - mediaingestion
      - jobmanagement
      - transcodingworker
      - mediastorage
      - apigateway

  grafana:
    image: grafana/grafana:9.1.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus

  node-exporter:
    image: prom/node-exporter:v1.5.0
    container_name: node-exporter
    ports:
      - "19100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'

volumes:
  media-uploads:
  media-output:
  media-transcoded:
  maven-repo:
  prometheus-data:
  grafana-data: